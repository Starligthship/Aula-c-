#include <stdio.h>

#define MAX 50


void inserirOrdenado(int v[], int *n, int valor) {
    if (*n >= MAX) {
        printf("Vetor cheio! Não é possível inserir.\n");
        return;
    }
    int i = *n - 1;
    while (i >= 0 && v[i] > valor) {
        v[i + 1] = v[i];
        i--;
    }
    v[i + 1] = valor;
    (*n)++;
}


int buscaBinaria(int v[], int n, int valor) {
    int inicio = 0, fim = n - 1, meio;
    while (inicio <= fim) {
        meio = (inicio + fim) / 2;
        if (v[meio] == valor) return meio;
        else if (v[meio] < valor) inicio = meio + 1;
        else fim = meio - 1;
    }
    return -1;
}


void removerElemento(int v[], int *n, int valor) {
    int pos = buscaBinaria(v, *n, valor);
    if (pos == -1) {
        printf("Elemento não encontrado.\n");
        return;
    }
    for (int i = pos; i < *n - 1; i++) {
        v[i] = v[i + 1];
    }
    (*n)--;
    printf("Elemento removido.\n");
}


void imprimirVetor(int v[], int n) {
    printf("Vetor: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", v[i]);
    }
    printf("\n");
}

int main() {
    int v[MAX], n, qtd, valor, opcao;

    do {
        printf("Digite o tamanho do vetor (entre 3 e 50): ");
        scanf("%d", &n);
    } while (n < 3 || n > 50);

    qtd = 0;
    printf("Digite %d valores inteiros para preencher o vetor:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &valor);
        inserirOrdenado(v, &qtd, valor);
    }

    do {
        printf("\nMenu:\n");
        printf("1 - Imprimir vetor\n");
        printf("2 - Consultar elemento (busca binaria)\n");
        printf("3 - Remover elemento\n");
        printf("4 - Inserir elemento\n");
        printf("0 - Sair\n");
        printf("Escolha: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                imprimirVetor(v, qtd);
                break;
            case 2:
                printf("Digite o valor a consultar: ");
                scanf("%d", &valor);
                int pos;
                pos = buscaBinaria(v, qtd, valor);
                if (pos == -1) printf("Nao encontrado.\n");
                else printf("Elemento encontrado na posicao %d.\n", pos);
                break;
            case 3:
                printf("Digite o valor a remover: ");
                scanf("%d", &valor);
                removerElemento(v, &qtd, valor);
                break;
            case 4:
                printf("Digite o valor a inserir: ");
                scanf("%d", &valor);
                inserirOrdenado(v, &qtd, valor);
                break;
            case 0:
                printf("Saindo..\n");
                break;
            default:
                printf("Opcao invalida.\n");
        }
    } while (opcao != 0);

    return 0;
}
